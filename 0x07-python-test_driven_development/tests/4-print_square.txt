import sys
sys.path.append("..")

print_square = __import__('4-print_square').print_square

# Test Case 1: defining the function
def print_square(size):
    if not isinstance(size, int):
        raise TypeError("size must be an integer")
    if size < 0 and not isinstance(size, float):
        raise ValueError("size must be >= 0")
    if isinstance(size, float) and size < 0:
        raise TypeError("size must be an integer")
    for n in range(size):
            for _ in range(size):
                print("{}".format("#"), end='')
            print()


# Test Case 1: checking if the function works as required with a positive integer
>>> print_square(4)
####
####
####
####

# Test Case 2: checking ig it raises a ValueError by passing a negative number
>>> print_square(-1)
Traceback: (most recent call last):
...
ValueError: size must be >= 0

# Test Case 3: checking if it raises a TypeError by passing a float nuumber
>>> print_square(1.23)
Traceback (most recent call last):
...
TypeError: size must be an integer
