# Test Case 1: checking if each element is divided by div integer
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]

# Test Case 2: checking if the original matrix hasn't been changed
>>> print(matrix)
[[1, 2, 3], [4,5, 6]]

# Test Case 3: checking if the the function raises a TypreError that Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3], [1, 2, 3, 4]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test Case 4: checking if the function raises a TypeError of finding an element that is not a an integer/Float
>>> matrix_divided([[1, 2, 3], ['h']], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 5: checking if the function raises ZeroDivisionError
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

#Test Case 6: checking if the function raises a TypeError: div must be a number
>>> matrix_divided(matrix, 'h')
Traceback (most recent call last):
...
TypeError: div must be a number
